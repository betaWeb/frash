#!/usr/bin/env php
<?php
    require('vendor/autoload.php');
    use Composants\Console\ORM\Createdb;
    use Composants\Console\ORM\Addentity;
    use Composants\Console\ORM\Addjoin;
    use Composants\Console\ORM\Updentity;
    use Composants\Console\Bundle\GenerateBundle;
    use Composants\Console\Bundle\GenerateController;

    function read_stdin(){
        $st = fopen('php://stdin', 'r');
        $input = fgets($st, 200);
        $input = rtrim($input);
        fclose($st);

        return $input;
    }

    if(count($argv) == 1){
        require_once('Composants/Console/listcommand.php');

        foreach($array as $k => $v){
            echo $k.' => '.$v.PHP_EOL;
        }
    }
    else{
        $expl = explode(':', $argv[1]);

        if($expl[0] == 'ORM' && $expl[1] == 'createdb'){
            new Createdb();
        }

        if($expl[0] == 'ORM' && $expl[1] == 'addentity' && !empty($expl[2]) && !empty($expl[3]) && !empty($argv[2])){
            new Addentity($expl[2], $expl[3], $argv[2]);
        }

        if($expl[0] == 'Bundle' && $expl[1] == 'generate' && !empty($expl[2])){
            new GenerateBundle($expl[2]);
        }

        if($expl[0] == 'Controller' && $expl[1] == 'generate'){
            fwrite(STDOUT, 'Nom du controller : ');
            $name = trim(fgets(STDIN));

            fwrite(STDOUT, 'Nom du bundle : ');
            $bundle = trim(fgets(STDIN));

            fwrite(STDOUT, 'Des actions ? (SÃ©parez les noms par /) ');
            $action = trim(fgets(STDIN));

            new GenerateController($name, $bundle, $action);
        }

        if($expl[0] == 'console' && $expl[1] == 'listcommand'){
            require_once('Composants/Console/listcommand.php');

            foreach($array as $k => $v){
                echo $k.' => '.$v.PHP_EOL;
            }
        }
    }